buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // h2 database
    runtimeOnly 'com.h2database:h2'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation("com.vladmihalcea:hibernate-types-52:2.21.1")
    //web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // log4j
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // javax validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Mapper
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    // QueryDSL
    //Querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    //WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    //Validater
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

}


// querydsl 설정

// querydsl 빌드 경로 변수
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// clean task 실행시 QClass 삭제
clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}

tasks.named('test') {
    useJUnitPlatform()
}
